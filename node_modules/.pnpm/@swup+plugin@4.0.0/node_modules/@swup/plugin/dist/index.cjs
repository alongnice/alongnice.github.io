const r=r=>String(r).split(".").map(r=>String(parseInt(r||"0",10))).concat(["0","0"]).slice(0,3).join(".");module.exports=class{constructor(){this.isSwupPlugin=!0,this.swup=void 0,this.version=void 0,this.requires={},this.handlersToUnregister=[]}mount(){}unmount(){this.handlersToUnregister.forEach(r=>r()),this.handlersToUnregister=[]}_beforeMount(){if(!this.name)throw new Error("You must define a name of plugin when creating a class.")}_afterUnmount(){}_checkRequirements(){return"object"!=typeof this.requires||Object.entries(this.requires).forEach(e=>{let[n,t]=e;if(t=Array.isArray(t)?t:[t],!function(e,n,t){const s=function(r,e){if("swup"===r)return e.version??"";{const n=e.findPlugin(r);return n?.version??""}}(e,t);return!!s&&((e,n)=>n.every(n=>{const[,t,s]=n.match(/^([\D]+)?(.*)$/)||[];var o,i;return((r,e)=>{const n={"":r=>0===r,">":r=>r>0,">=":r=>r>=0,"<":r=>r<0,"<=":r=>r<=0};return(n[e]||n[""])(r)})((i=s,o=r(o=e),i=r(i),o.localeCompare(i,void 0,{numeric:!0})),t||">=")}))(s,n)}(n,t,this.swup)){const r=`${n} ${t.join(", ")}`;throw new Error(`Plugin version mismatch: ${this.name} requires ${r}`)}}),!0}on(r,e,n){var t;void 0===n&&(n={}),e=!(t=e).name.startsWith("bound ")||t.hasOwnProperty("prototype")?e.bind(this):e;const s=this.swup.hooks.on(r,e,n);return this.handlersToUnregister.push(s),s}once(r,e,n){return void 0===n&&(n={}),this.on(r,e,{...n,once:!0})}before(r,e,n){return void 0===n&&(n={}),this.on(r,e,{...n,before:!0})}replace(r,e,n){return void 0===n&&(n={}),this.on(r,e,{...n,replace:!0})}off(r,e){return this.swup.hooks.off(r,e)}};
//# sourceMappingURL=index.cjs.map
