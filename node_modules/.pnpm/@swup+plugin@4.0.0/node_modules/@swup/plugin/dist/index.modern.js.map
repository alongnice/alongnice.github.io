{"version":3,"file":"index.modern.js","sources":["../src/versionSatisfies.ts","../src/index.ts","../src/pluginRequirements.ts"],"sourcesContent":["type Comparator = '>' | '>=' | '<' | '<=';\n\n// Fill versions to exactly 3 decimals\nexport const normalizeVersion = (version: string): string => {\n\treturn String(version)\n\t\t.split('.')\n\t\t.map(segment => String(parseInt(segment || '0', 10)))\n\t\t.concat(['0', '0'])\n\t\t.slice(0, 3)\n\t\t.join('.');\n};\n\n// Numerically compare version strings after normalizing them\nexport const compareVersion = (a: string, b: string): number => {\n\ta = normalizeVersion(a);\n\tb = normalizeVersion(b);\n\treturn a.localeCompare(b, undefined, { numeric: true });\n};\n\n// Apply a comparator (equals, greater-than, etc) by its symbol to a sort comparison\nconst applyComparator = (comparisonResult: number, comparator: Comparator) => {\n\tconst comparators = {\n\t\t'': (r: number) => r === 0,\n\t\t'>': (r: number) => r > 0,\n\t\t'>=': (r: number) => r >= 0,\n\t\t'<': (r: number) => r < 0,\n\t\t'<=': (r: number) => r <= 0\n\t};\n\tconst comparatorFn = comparators[comparator] || comparators[''];\n\treturn comparatorFn(comparisonResult);\n};\n\n/**\n * Check if a version satisfies all given version requirements\n *\n * versionSatisfies('2.1.0', ['>=2', '<4']) // true\n * versionSatisfies('2.1.0', ['5']) // false\n *\n * @param {string} installed Installed version\n * @param {Array.<string>} requirements Array of requirements that must be satisfied\n * @returns boolean\n */\nexport const versionSatisfies = (installed: string, requirements: string[]) => {\n\treturn requirements.every((required) => {\n\t\tconst [, comparator, version] = required.match(/^([\\D]+)?(.*)$/) || [];\n\t\tconst comparisonResult = compareVersion(installed, version);\n\t\treturn applyComparator(comparisonResult, (comparator as Comparator) || '>=');\n\t});\n};\n","import type Swup from 'swup';\nimport type { Plugin, HookName, HookOptions, HookUnregister, Handler } from 'swup';\nimport { checkDependencyVersion } from './pluginRequirements.js';\n\nfunction isBound(func: Function) {\n\treturn func.name.startsWith('bound ') && !func.hasOwnProperty('prototype');\n}\n\nexport default abstract class SwupPlugin implements Plugin {\n\t/** Name of the plugin */\n\tabstract name: string;\n\n\t/** Identify as a swup plugin */\n\tisSwupPlugin: true = true;\n\n\t// Swup instance, assigned by swup itself\n\tswup!: Swup;\n\n\t/** Version of this plugin. Currently not in use, defined here for backward compatiblity. */\n\tversion?: string;\n\n\t/** Version requirements of this plugin. Example: `{ swup: '>=4' }` */\n\trequires?: Record<string, string | string[]> = {};\n\n\t// List of hook handlers to unregister on unmount\n\tprivate handlersToUnregister: HookUnregister[] = [];\n\n\t/** Run on mount */\n\tmount() {\n\t\t// this is mount method rewritten by class extending\n\t\t// and is executed when swup is enabled with plugin\n\t}\n\n\t/** Run on unmount */\n\tunmount() {\n\t\t// this is unmount method rewritten by class extending\n\t\t// and is executed when swup with plugin is disabled\n\n\t\t// Unsubscribe all registered hook handlers\n\t\tthis.handlersToUnregister.forEach((unregister) => unregister());\n\t\tthis.handlersToUnregister = [];\n\t}\n\n\t_beforeMount(): void {\n\t\tif (!this.name) {\n\t\t\tthrow new Error('You must define a name of plugin when creating a class.');\n\t\t}\n\t}\n\n\t_afterUnmount(): void {\n\t\t// here for any future hidden auto-cleanup\n\t}\n\n\t_checkRequirements(): boolean {\n\t\tif (typeof this.requires !== 'object') {\n\t\t\treturn true;\n\t\t}\n\n\t\tObject.entries(this.requires).forEach(([dependency, versions]) => {\n\t\t\tversions = Array.isArray(versions) ? versions : [versions];\n\t\t\tif (!checkDependencyVersion(dependency, versions, this.swup)) {\n\t\t\t\tconst requirement = `${dependency} ${versions.join(', ')}`;\n\t\t\t\tthrow new Error(`Plugin version mismatch: ${this.name} requires ${requirement}`);\n\t\t\t}\n\t\t});\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Register a new hook handler.\n\t *\n\t * On plugin unmount, the handler will automatically be unregistered.\n\t * The handler function is lexically bound to the plugin instance for convenience.\n\t * @see swup.hooks.on\n\t */\n\tprotected on<T extends HookName>(hook: T, handler: Handler<T>, options: HookOptions = {}): HookUnregister {\n\t\thandler = !isBound(handler) ? handler.bind(this) : handler;\n\t\tconst unregister = this.swup.hooks.on(hook, handler, options);\n\t\tthis.handlersToUnregister.push(unregister);\n\t\treturn unregister;\n\t}\n\n\tprotected once<T extends HookName>(hook: T, handler: Handler<T>, options: HookOptions = {}): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, once: true });\n\t}\n\n\tprotected before<T extends HookName>(hook: T, handler: Handler<T>, options: HookOptions = {}): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, before: true });\n\t}\n\n\tprotected replace<T extends HookName>(hook: T, handler: Handler<T>, options: HookOptions = {}): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, replace: true });\n\t}\n\n\tprotected off<T extends HookName>(hook: T, handler?: Handler<T>): void {\n\t\treturn this.swup.hooks.off(hook, handler!);\n\t}\n}\n","import type Swup from 'swup';\n\nimport { versionSatisfies } from './versionSatisfies.js';\n\nfunction getInstalledDependencyVersion(dependency: string, swup: Swup): string {\n\tif (dependency === 'swup') {\n\t\treturn swup.version ?? '';\n\t} else {\n\t\t// Circular type dependency?\n\t\t// findPlugin returns swup's Plugin type which is not up-to-date\n\t\t// with the actual Plugin type from index.ts\n\t\tconst plugin = swup.findPlugin(dependency);\n\t\treturn plugin?.version ?? '';\n\t}\n}\n\nexport function checkDependencyVersion(\n\tdependency: string,\n\trequirements: string[],\n\tswup: Swup\n): boolean {\n\tconst version = getInstalledDependencyVersion(dependency, swup);\n\tif (version) {\n\t\treturn versionSatisfies(version, requirements);\n\t} else {\n\t\treturn false;\n\t}\n}\n"],"names":["normalizeVersion","version","String","split","map","segment","parseInt","concat","slice","join","SwupPlugin","constructor","this","isSwupPlugin","swup","requires","handlersToUnregister","mount","unmount","forEach","unregister","_beforeMount","name","Error","_afterUnmount","_checkRequirements","Object","entries","dependency","versions","requirements","_swup$version","_plugin$version","plugin","findPlugin","getInstalledDependencyVersion","versionSatisfies","installed","every","required","comparator","match","compareVersion","a","b","applyComparator","comparisonResult","comparators","r","localeCompare","undefined","numeric","checkDependencyVersion","Array","isArray","requirement","on","hook","handler","options","func","startsWith","hasOwnProperty","bind","hooks","push","once","_extends","before","replace","off"],"mappings":"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"}