!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(t||self).SwupParallelPlugin=n()}(this,function(){function t(t){var n;null==(n=t=t||document.body)||n.getBoundingClientRect()}function n(){return n=Object.assign?Object.assign.bind():function(t){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i])}return t},n.apply(this,arguments)}const e=t=>String(t).split(".").map(t=>String(parseInt(t||"0",10))).concat(["0","0"]).slice(0,3).join(".");class i{constructor(){this.isSwupPlugin=!0,this.swup=void 0,this.version=void 0,this.requires={},this.handlersToUnregister=[]}mount(){}unmount(){this.handlersToUnregister.forEach(t=>t()),this.handlersToUnregister=[]}_beforeMount(){if(!this.name)throw new Error("You must define a name of plugin when creating a class.")}_afterUnmount(){}_checkRequirements(){return"object"!=typeof this.requires||Object.entries(this.requires).forEach(([t,n])=>{if(!function(t,n,i){const s=function(t,n){var e;if("swup"===t)return null!=(e=n.version)?e:"";{var i;const e=n.findPlugin(t);return null!=(i=null==e?void 0:e.version)?i:""}}(t,i);return!!s&&((t,n)=>n.every(n=>{const[,i,s]=n.match(/^([\D]+)?(.*)$/)||[];var r,o;return((t,n)=>{const e={"":t=>0===t,">":t=>t>0,">=":t=>t>=0,"<":t=>t<0,"<=":t=>t<=0};return(e[n]||e[""])(t)})((o=s,r=e(r=t),o=e(o),r.localeCompare(o,void 0,{numeric:!0})),i||">=")}))(s,n)}(t,n=Array.isArray(n)?n:[n],this.swup)){const e=`${t} ${n.join(", ")}`;throw new Error(`Plugin version mismatch: ${this.name} requires ${e}`)}}),!0}on(t,n,e={}){var i;n=!(i=n).name.startsWith("bound ")||i.hasOwnProperty("prototype")?n.bind(this):n;const s=this.swup.hooks.on(t,n,e);return this.handlersToUnregister.push(s),s}once(t,e,i={}){return this.on(t,e,n({},i,{once:!0}))}before(t,e,i={}){return this.on(t,e,n({},i,{before:!0}))}replace(t,e,i={}){return this.on(t,e,n({},i,{replace:!0}))}off(t,n){return this.swup.hooks.off(t,n)}}return class extends i{constructor(n){void 0===n&&(n={}),super(),this.name="SwupParallelPlugin",this.requires={swup:">=4.6"},this.defaults={containers:[],keep:0},this.options=void 0,this.originalContainers=null,this.parallelContainers=[],this.startVisit=t=>{this.originalContainers=null,this.visitHasPotentialParallelAnimation(t)&&(t.animation.wait=!0,t.animation.parallel=!0)},this.skipOutAnimation=(t,n)=>{this.isParallelVisit(t)&&(n.skip=!0)},this.insertContainers=n=>{if(!this.isParallelVisit(n))return;const e=this.getParallelContainersForVisit(n);this.parallelContainers=e,this.swup.hooks.call("content:insert",{containers:e},()=>{for(const{all:i,next:s,previous:r,keep:o,remove:a}of e)i.forEach((t,n)=>t.style.setProperty("--swup-parallel-container",`${n}`)),r.setAttribute("aria-hidden","true"),r.before(s),n.animation.animate&&(s.classList.add("is-next-container"),t(s),s.classList.remove("is-next-container")),r.classList.add("is-previous-container"),o.forEach(t=>t.classList.add("is-kept-container")),a.forEach(t=>t.classList.add("is-removing-container"))}),this.originalContainers=n.containers;const i=this.parallelContainers.map(t=>{let{selector:n}=t;return n});n.containers=n.containers.filter(t=>!i.includes(t))},this.resetContainers=t=>{this.originalContainers&&(t.containers=this.originalContainers)},this.cleanupContainers=()=>{const t=this.parallelContainers;this.swup.hooks.call("content:remove",{containers:t},()=>{for(const{remove:n,next:e}of t)n.forEach(t=>t.remove()),e.classList.remove("is-next-container")}),this.parallelContainers=[]},this.options={...this.defaults,...n}}mount(){this.options.containers.length||(this.options.containers=this.swup.options.containers),this.swup.hooks.create("content:insert"),this.swup.hooks.create("content:remove"),this.on("visit:start",this.startVisit,{priority:1}),this.before("animation:out:await",this.skipOutAnimation,{priority:1}),this.before("content:replace",this.insertContainers,{priority:1}),this.on("content:replace",this.resetContainers),this.on("visit:end",this.cleanupContainers)}getParallelContainersForVisit(t){const{containers:n}=this.options,e=n.filter(n=>t.containers.includes(n));return e.length?e.reduce((n,e)=>{let{keep:i}=this.options;i="object"==typeof i?i[e]:i,i=Math.max(0,Number(i));const s=t.to.document.querySelector(e),r=Array.from(document.querySelectorAll(e)),o=r[0],a=r.slice(0,i),l=r.slice(i),c=[...new Set([s,o,...a,...l])];return s&&o?[...n,{selector:e,next:s,previous:o,keep:a,remove:l,all:c}]:(console.warn(`Parallel container ${e} not found`),n)},[]):(console.warn("No parallel containers found in list of replaced containers"),[])}isParallelVisit(t){return t.animation.parallel}markVisitAsParallelAnimation(t){t.animation.wait=!0,t.animation.parallel=!0}visitHasPotentialParallelAnimation(t){return!1!==t.animation.parallel&&this.visitHasParallelContainers(t)}visitHasParallelContainers(t){return this.options.containers.some(n=>{const e=document.querySelector(n);return e?.matches(t.containers.join(","))})}}});
//# sourceMappingURL=index.umd.js.map
