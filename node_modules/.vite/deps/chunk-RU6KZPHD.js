// node_modules/.pnpm/@swup+plugin@4.0.0/node_modules/@swup/plugin/dist/index.modern.js
function r() {
  return r = Object.assign ? Object.assign.bind() : function(r2) {
    for (var n2 = 1; n2 < arguments.length; n2++) {
      var e2 = arguments[n2];
      for (var t in e2) Object.prototype.hasOwnProperty.call(e2, t) && (r2[t] = e2[t]);
    }
    return r2;
  }, r.apply(this, arguments);
}
var n = (r2) => String(r2).split(".").map((r3) => String(parseInt(r3 || "0", 10))).concat(["0", "0"]).slice(0, 3).join(".");
var e = class {
  constructor() {
    this.isSwupPlugin = true, this.swup = void 0, this.version = void 0, this.requires = {}, this.handlersToUnregister = [];
  }
  mount() {
  }
  unmount() {
    this.handlersToUnregister.forEach((r2) => r2()), this.handlersToUnregister = [];
  }
  _beforeMount() {
    if (!this.name) throw new Error("You must define a name of plugin when creating a class.");
  }
  _afterUnmount() {
  }
  _checkRequirements() {
    return "object" != typeof this.requires || Object.entries(this.requires).forEach(([r2, e2]) => {
      if (!function(r3, e3, t) {
        const s = function(r4, n2) {
          var e4;
          if ("swup" === r4) return null != (e4 = n2.version) ? e4 : "";
          {
            var t2;
            const e5 = n2.findPlugin(r4);
            return null != (t2 = null == e5 ? void 0 : e5.version) ? t2 : "";
          }
        }(r3, t);
        return !!s && ((r4, e4) => e4.every((e5) => {
          const [, t2, s2] = e5.match(/^([\D]+)?(.*)$/) || [];
          var o, i;
          return ((r5, n2) => {
            const e6 = { "": (r6) => 0 === r6, ">": (r6) => r6 > 0, ">=": (r6) => r6 >= 0, "<": (r6) => r6 < 0, "<=": (r6) => r6 <= 0 };
            return (e6[n2] || e6[""])(r5);
          })((i = s2, o = n(o = r4), i = n(i), o.localeCompare(i, void 0, { numeric: true })), t2 || ">=");
        }))(s, e3);
      }(r2, e2 = Array.isArray(e2) ? e2 : [e2], this.swup)) {
        const n2 = `${r2} ${e2.join(", ")}`;
        throw new Error(`Plugin version mismatch: ${this.name} requires ${n2}`);
      }
    }), true;
  }
  on(r2, n2, e2 = {}) {
    var t;
    n2 = !(t = n2).name.startsWith("bound ") || t.hasOwnProperty("prototype") ? n2.bind(this) : n2;
    const s = this.swup.hooks.on(r2, n2, e2);
    return this.handlersToUnregister.push(s), s;
  }
  once(n2, e2, t = {}) {
    return this.on(n2, e2, r({}, t, { once: true }));
  }
  before(n2, e2, t = {}) {
    return this.on(n2, e2, r({}, t, { before: true }));
  }
  replace(n2, e2, t = {}) {
    return this.on(n2, e2, r({}, t, { replace: true }));
  }
  off(r2, n2) {
    return this.swup.hooks.off(r2, n2);
  }
};

export {
  e
};
//# sourceMappingURL=chunk-RU6KZPHD.js.map
