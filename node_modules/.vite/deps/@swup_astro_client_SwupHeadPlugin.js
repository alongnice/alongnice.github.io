import {
  e
} from "./chunk-RU6KZPHD.js";
import "./chunk-EQCVQC35.js";

// node_modules/.pnpm/@swup+head-plugin@2.2.0_swup@4.7.0/node_modules/@swup/head-plugin/dist/index.modern.js
function t() {
  return t = Object.assign ? Object.assign.bind() : function(e2) {
    for (var t2 = 1; t2 < arguments.length; t2++) {
      var s2 = arguments[t2];
      for (var n2 in s2) Object.prototype.hasOwnProperty.call(s2, n2) && (e2[n2] = s2[n2]);
    }
    return e2;
  }, t.apply(this, arguments);
}
function s(e2) {
  return "title" !== e2.localName && !e2.matches("[data-swup-theme]");
}
function n(e2, t2) {
  return e2.outerHTML === t2.outerHTML;
}
function r(e2) {
  return e2.matches("link[rel=stylesheet][href]");
}
var o = class extends e {
  constructor(e2 = {}) {
    var o2;
    super(), o2 = this, this.name = "SwupHeadPlugin", this.requires = { swup: ">=4.6" }, this.defaults = { persistTags: false, persistAssets: false, awaitAssets: false, timeout: 3e3 }, this.options = void 0, this.updateHead = async function(e3, { page: {} }) {
      const t2 = e3.to.document, { removed: i, added: a } = function(e4, t3, { shouldPersist: r2 = () => false } = {}) {
        const o3 = Array.from(e4.children), i2 = Array.from(t3.children), a2 = (l2 = o3, i2.reduce((e5, t4, s2) => (l2.some((e6) => n(t4, e6)) || e5.push({ el: t4, index: s2 }), e5), []));
        var l2;
        const u2 = function(e5, t4) {
          return e5.reduce((e6, s2) => (t4.some((e7) => n(s2, e7)) || e6.push({ el: s2 }), e6), []);
        }(o3, i2);
        return u2.reverse().filter(({ el: e5 }) => s(e5)).filter(({ el: e5 }) => !r2(e5)).forEach(({ el: t4 }) => e4.removeChild(t4)), a2.filter(({ el: e5 }) => s(e5)).forEach(({ el: t4, index: s2 = 0 }) => {
          e4.insertBefore(t4.cloneNode(true), e4.children[s2 + 1] || null);
        }), { removed: u2.map(({ el: e5 }) => e5), added: a2.map(({ el: e5 }) => e5) };
      }(document.head, t2.head, { shouldPersist: (e4) => o2.isPersistentTag(e4) });
      o2.swup.log(`Removed ${i.length} / added ${a.length} tags in head`);
      const l = (u = document.documentElement).lang !== (c = t2.documentElement).lang ? (u.lang = c.lang, u.lang) : null;
      var u, c;
      if (l && o2.swup.log(`Updated lang attribute: ${l}`), o2.options.awaitAssets) {
        const e4 = function(e5, t3 = 0) {
          return e5.filter(r).map((e6) => function(e7, t4 = 0) {
            const s2 = (t5) => {
              (({ href: e8 }) => Array.from(document.styleSheets).map(({ href: e9 }) => e9).includes(e8))(e7) ? t5() : setTimeout(() => s2(t5), 10);
            };
            return new Promise((e8) => {
              s2(e8), t4 > 0 && setTimeout(e8, t4);
            });
          }(e6, t3));
        }(a, o2.options.timeout);
        e4.length && (o2.swup.log(`Waiting for ${e4.length} assets to load`), await Promise.all(e4));
      }
    }, this.options = t({}, this.defaults, e2), this.options.persistAssets && !this.options.persistTags && (this.options.persistTags = "link[rel=stylesheet], script[src], style");
  }
  mount() {
    this.before("content:replace", this.updateHead);
  }
  isPersistentTag(e2) {
    const { persistTags: t2 } = this.options;
    return "function" == typeof t2 ? t2(e2) : "string" == typeof t2 ? e2.matches(t2) : Boolean(t2);
  }
};
export {
  o as default
};
//# sourceMappingURL=@swup_astro_client_SwupHeadPlugin.js.map
