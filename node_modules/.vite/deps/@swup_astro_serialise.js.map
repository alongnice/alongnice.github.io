{
  "version": 3,
  "sources": ["../../.pnpm/@swup+astro@1.4.1_@types+babel__core@7.20.5/node_modules/@swup/astro/dist/serialise.js"],
  "sourcesContent": ["export function serialiseOptions(strings, ...substitutions) {\n    return strings.reduce((acc, curr, i) => {\n        const substitution = substitutions[i];\n        if (typeof substitution === 'object') {\n            acc += `${curr}${serialise(substitution)}`;\n        }\n        else if (substitution) {\n            acc += `${curr}${substitution}`;\n        }\n        else {\n            acc += curr;\n        }\n        return acc;\n    }, '');\n}\nexport function serialise(value) {\n    return `deserialise(${JSON.stringify(JSON.stringify(value, replacer))})`;\n}\nexport function deserialise(serialised) {\n    return JSON.parse(serialised, reviver);\n}\nfunction replacer(key, value) {\n    if (value instanceof RegExp) {\n        return [':regex:', value.toString()];\n    }\n    if (typeof value === 'function') {\n        let output = value.toString();\n        if (value.name && (new RegExp(`^\\\\s*${value.name}\\\\s*[(]`)).test(output)) {\n            output = 'function ' + output;\n        }\n        return [':function:', output];\n    }\n    return value;\n}\nfunction reviver(key, value) {\n    if (Array.isArray(value) && value.length === 2 && typeof value[1] === 'string') {\n        const type = value[0];\n        value = value[1];\n        if (type === ':regex:') {\n            const fragments = value.match(/\\/(.*?)\\/([a-z]*)?$/i) || [];\n            return new RegExp(fragments[1], fragments[2] || '');\n        }\n        if (type === ':function:') {\n            return new Function(`return (${value}).apply(this, arguments);`);\n        }\n    }\n    return value;\n}\n"],
  "mappings": ";;;AAAO,SAAS,iBAAiB,YAAY,eAAe;AACxD,SAAO,QAAQ,OAAO,CAAC,KAAK,MAAM,MAAM;AACpC,UAAM,eAAe,cAAc,CAAC;AACpC,QAAI,OAAO,iBAAiB,UAAU;AAClC,aAAO,GAAG,IAAI,GAAG,UAAU,YAAY,CAAC;AAAA,IAC5C,WACS,cAAc;AACnB,aAAO,GAAG,IAAI,GAAG,YAAY;AAAA,IACjC,OACK;AACD,aAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX,GAAG,EAAE;AACT;AACO,SAAS,UAAU,OAAO;AAC7B,SAAO,eAAe,KAAK,UAAU,KAAK,UAAU,OAAO,QAAQ,CAAC,CAAC;AACzE;AACO,SAAS,YAAY,YAAY;AACpC,SAAO,KAAK,MAAM,YAAY,OAAO;AACzC;AACA,SAAS,SAAS,KAAK,OAAO;AAC1B,MAAI,iBAAiB,QAAQ;AACzB,WAAO,CAAC,WAAW,MAAM,SAAS,CAAC;AAAA,EACvC;AACA,MAAI,OAAO,UAAU,YAAY;AAC7B,QAAI,SAAS,MAAM,SAAS;AAC5B,QAAI,MAAM,QAAS,IAAI,OAAO,QAAQ,MAAM,IAAI,SAAS,EAAG,KAAK,MAAM,GAAG;AACtE,eAAS,cAAc;AAAA,IAC3B;AACA,WAAO,CAAC,cAAc,MAAM;AAAA,EAChC;AACA,SAAO;AACX;AACA,SAAS,QAAQ,KAAK,OAAO;AACzB,MAAI,MAAM,QAAQ,KAAK,KAAK,MAAM,WAAW,KAAK,OAAO,MAAM,CAAC,MAAM,UAAU;AAC5E,UAAM,OAAO,MAAM,CAAC;AACpB,YAAQ,MAAM,CAAC;AACf,QAAI,SAAS,WAAW;AACpB,YAAM,YAAY,MAAM,MAAM,sBAAsB,KAAK,CAAC;AAC1D,aAAO,IAAI,OAAO,UAAU,CAAC,GAAG,UAAU,CAAC,KAAK,EAAE;AAAA,IACtD;AACA,QAAI,SAAS,cAAc;AACvB,aAAO,IAAI,SAAS,WAAW,KAAK,2BAA2B;AAAA,IACnE;AAAA,EACJ;AACA,SAAO;AACX;",
  "names": []
}
